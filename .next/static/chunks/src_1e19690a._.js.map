{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 141, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf;KAnBS","debugId":null}},
    {"offset": {"line": 204, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,6LAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 236, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\n        destructive:\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Badge({\n  className,\n  variant,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"span\"> &\n  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"span\"\n\n  return (\n    <Comp\n      data-slot=\"badge\"\n      className={cn(badgeVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,kZACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,UAAU,KAAK,EACf,GAAG,OAEuD;IAC1D,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;KAhBS","debugId":null}},
    {"offset": {"line": 288, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Tabs({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Root>) {\n  return (\n    <TabsPrimitive.Root\n      data-slot=\"tabs\"\n      className={cn(\"flex flex-col gap-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TabsList({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.List>) {\n  return (\n    <TabsPrimitive.List\n      data-slot=\"tabs-list\"\n      className={cn(\n        \"bg-muted text-muted-foreground inline-flex h-9 w-fit items-center justify-center rounded-lg p-[3px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsTrigger({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Trigger>) {\n  return (\n    <TabsPrimitive.Trigger\n      data-slot=\"tabs-trigger\"\n      className={cn(\n        \"data-[state=active]:bg-background dark:data-[state=active]:text-foreground focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:outline-ring dark:data-[state=active]:border-input dark:data-[state=active]:bg-input/30 text-foreground dark:text-muted-foreground inline-flex h-[calc(100%-1px)] flex-1 items-center justify-center gap-1.5 rounded-md border border-transparent px-2 py-1 text-sm font-medium whitespace-nowrap transition-[color,box-shadow] focus-visible:ring-[3px] focus-visible:outline-1 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:shadow-sm [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsContent({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Content>) {\n  return (\n    <TabsPrimitive.Content\n      data-slot=\"tabs-content\"\n      className={cn(\"flex-1 outline-none\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,KAAK,EACZ,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,6LAAC,mKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,6LAAC,mKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,uGACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS;AAgBT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,6LAAC,mKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mqBACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS;AAgBT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,6LAAC,mKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf;MAXS","debugId":null}},
    {"offset": {"line": 364, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useEffect } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { DashboardMetrics, Bot, Trade } from \"@/lib/types\";\n\n// Mock data for demonstration\nconst mockMetrics: DashboardMetrics = {\n  totalBots: 8,\n  activeBots: 6,\n  totalPnL: 15420.50,\n  todayPnL: 2340.75,\n  totalTrades: 142,\n  winRate: 0.68,\n  bestBot: \"BOT_TREND_001\",\n  worstBot: \"BOT_REVERSAL_003\",\n  marketStatus: \"open\",\n  lastUpdate: Date.now(),\n};\n\nconst mockBots: Bot[] = [\n  {\n    id: \"BOT_TREND_001\",\n    strategy: \"trend\",\n    status: \"active\",\n    parameters: { riskTolerance: 0.7, maxLoss: 1000, targetProfit: 2000, timeframe: 300000 },\n    performance: {\n      botId: \"BOT_TREND_001\",\n      strategy: \"trend\",\n      totalTrades: 45,\n      winningTrades: 32,\n      losingTrades: 13,\n      totalPnL: 5420.50,\n      maxDrawdown: 850.00,\n      sharpeRatio: 1.85,\n      winRate: 0.71,\n      avgWin: 245.30,\n      avgLoss: 125.80,\n      volatilityResilience: 0.82,\n      lastActive: Date.now() - 300000,\n      createdAt: Date.now() - 86400000,\n      parameters: {},\n    },\n    createdAt: Date.now() - 86400000,\n    lastModified: Date.now() - 300000,\n  },\n  {\n    id: \"BOT_REVERSAL_002\",\n    strategy: \"reversal\",\n    status: \"active\",\n    parameters: { riskTolerance: 0.8, maxLoss: 800, targetProfit: 1600, timeframe: 240000 },\n    performance: {\n      botId: \"BOT_REVERSAL_002\",\n      strategy: \"reversal\",\n      totalTrades: 38,\n      winningTrades: 24,\n      losingTrades: 14,\n      totalPnL: 3240.25,\n      maxDrawdown: 620.00,\n      sharpeRatio: 1.42,\n      winRate: 0.63,\n      avgWin: 198.50,\n      avgLoss: 98.75,\n      volatilityResilience: 0.75,\n      lastActive: Date.now() - 180000,\n      createdAt: Date.now() - 72000000,\n      parameters: {},\n    },\n    createdAt: Date.now() - 72000000,\n    lastModified: Date.now() - 180000,\n  },\n];\n\nconst mockTrades: Trade[] = [\n  {\n    id: \"TRD_001\",\n    botId: \"BOT_TREND_001\",\n    symbol: \"BANKNIFTY_CE\",\n    type: \"buy\",\n    quantity: 1,\n    entryPrice: 42150.50,\n    exitPrice: 42285.75,\n    pnl: 135.25,\n    status: \"closed\",\n    entryTime: Date.now() - 1800000,\n    exitTime: Date.now() - 900000,\n    slippage: 2.50,\n    brokerage: 20,\n  },\n  {\n    id: \"TRD_002\",\n    botId: \"BOT_REVERSAL_002\",\n    symbol: \"BANKNIFTY_PE\",\n    type: \"sell\",\n    quantity: 1,\n    entryPrice: 41980.25,\n    pnl: 0,\n    status: \"open\",\n    entryTime: Date.now() - 600000,\n    slippage: 1.75,\n    brokerage: 20,\n  },\n];\n\nexport default function TradingDashboard() {\n  const [metrics, setMetrics] = useState<DashboardMetrics>(mockMetrics);\n  const [bots, setBots] = useState<Bot[]>(mockBots);\n  const [trades, setTrades] = useState<Trade[]>(mockTrades);\n  const [command, setCommand] = useState(\"\");\n  const [commandHistory, setCommandHistory] = useState<Array<{\n    command: string;\n    result: string;\n    timestamp: number;\n  }>>([]);\n\n  // Simulate live updates\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setMetrics(prev => ({\n        ...prev,\n        totalPnL: prev.totalPnL + (Math.random() - 0.5) * 100,\n        todayPnL: prev.todayPnL + (Math.random() - 0.5) * 50,\n        lastUpdate: Date.now(),\n      }));\n    }, 3000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  const handleCommand = () => {\n    if (!command.trim()) return;\n\n    // Mock command execution\n    let result = \"\";\n    const cmd = command.toLowerCase();\n\n    if (cmd.includes(\"create\") && cmd.includes(\"bot\")) {\n      result = \"✅ Created new trend bot: BOT_TREND_\" + Date.now().toString().slice(-6);\n    } else if (cmd.includes(\"list\") && cmd.includes(\"bot\")) {\n      result = `📋 Found ${bots.length} active bots:\\n${bots.map(b => `• ${b.id} (${b.strategy}) - PnL: ₹${b.performance.totalPnL.toFixed(2)}`).join('\\n')}`;\n    } else if (cmd.includes(\"dispose\") || cmd.includes(\"kill\")) {\n      result = \"🗑️ Bot disposed successfully\";\n    } else if (cmd.includes(\"status\")) {\n      result = \"🤖 Bot Status: Active - 45 trades - ₹5,420.50 PnL - 71% win rate\";\n    } else {\n      result = \"❓ Command not recognized. Type 'help' for available commands.\";\n    }\n\n    setCommandHistory(prev => [\n      { command, result, timestamp: Date.now() },\n      ...prev.slice(0, 9) // Keep last 10 commands\n    ]);\n    setCommand(\"\");\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case \"active\": return \"bg-green-500\";\n      case \"paused\": return \"bg-yellow-500\";\n      case \"disposed\": return \"bg-red-500\";\n      default: return \"bg-gray-500\";\n    }\n  };\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('en-IN', {\n      style: 'currency',\n      currency: 'INR',\n      minimumFractionDigits: 2,\n    }).format(amount);\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header Metrics */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n        <Card className=\"bg-gray-800 border-gray-700\">\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"text-sm font-medium text-gray-400\">Total PnL</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-green-400\">\n              {formatCurrency(metrics.totalPnL)}\n            </div>\n            <p className=\"text-xs text-gray-500 mt-1\">\n              Today: {formatCurrency(metrics.todayPnL)}\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card className=\"bg-gray-800 border-gray-700\">\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"text-sm font-medium text-gray-400\">Active Bots</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-blue-400\">\n              {metrics.activeBots}/{metrics.totalBots}\n            </div>\n            <p className=\"text-xs text-gray-500 mt-1\">\n              {Math.round((metrics.activeBots / metrics.totalBots) * 100)}% active\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card className=\"bg-gray-800 border-gray-700\">\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"text-sm font-medium text-gray-400\">Win Rate</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-purple-400\">\n              {Math.round(metrics.winRate * 100)}%\n            </div>\n            <p className=\"text-xs text-gray-500 mt-1\">\n              {metrics.totalTrades} total trades\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card className=\"bg-gray-800 border-gray-700\">\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"text-sm font-medium text-gray-400\">Market Status</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"flex items-center space-x-2\">\n              <div className={`w-3 h-3 rounded-full ${\n                metrics.marketStatus === 'open' ? 'bg-green-500' : 'bg-red-500'\n              } animate-pulse`}></div>\n              <span className=\"text-lg font-semibold capitalize\">\n                {metrics.marketStatus}\n              </span>\n            </div>\n            <p className=\"text-xs text-gray-500 mt-1\">\n              Last update: {new Date(metrics.lastUpdate).toLocaleTimeString()}\n            </p>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Main Content Tabs */}\n      <Tabs defaultValue=\"bots\" className=\"space-y-4\">\n        <TabsList className=\"grid w-full grid-cols-4 bg-gray-800\">\n          <TabsTrigger value=\"bots\">Bots</TabsTrigger>\n          <TabsTrigger value=\"trades\">Trades</TabsTrigger>\n          <TabsTrigger value=\"commands\">Commands</TabsTrigger>\n          <TabsTrigger value=\"analytics\">Analytics</TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"bots\" className=\"space-y-4\">\n          <Card className=\"bg-gray-800 border-gray-700\">\n            <CardHeader>\n              <CardTitle>Active Trading Bots</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-4\">\n                {bots.map((bot) => (\n                  <div key={bot.id} className=\"flex items-center justify-between p-4 bg-gray-700 rounded-lg\">\n                    <div className=\"flex items-center space-x-4\">\n                      <div className={`w-3 h-3 rounded-full ${getStatusColor(bot.status)}`}></div>\n                      <div>\n                        <h3 className=\"font-semibold\">{bot.id}</h3>\n                        <p className=\"text-sm text-gray-400 capitalize\">{bot.strategy} Strategy</p>\n                      </div>\n                    </div>\n                    <div className=\"text-right\">\n                      <div className=\"font-semibold text-green-400\">\n                        {formatCurrency(bot.performance.totalPnL)}\n                      </div>\n                      <div className=\"text-sm text-gray-400\">\n                        {bot.performance.totalTrades} trades • {Math.round(bot.performance.winRate * 100)}% win\n                      </div>\n                    </div>\n                    <Badge variant=\"outline\" className=\"ml-4\">\n                      Risk: {Math.round(bot.parameters.riskTolerance * 100)}%\n                    </Badge>\n                  </div>\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"trades\" className=\"space-y-4\">\n          <Card className=\"bg-gray-800 border-gray-700\">\n            <CardHeader>\n              <CardTitle>Recent Trades</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-3\">\n                {trades.map((trade) => (\n                  <div key={trade.id} className=\"flex items-center justify-between p-3 bg-gray-700 rounded-lg\">\n                    <div className=\"flex items-center space-x-3\">\n                      <Badge variant={trade.status === 'open' ? 'default' : 'secondary'}>\n                        {trade.status}\n                      </Badge>\n                      <div>\n                        <div className=\"font-medium\">{trade.symbol}</div>\n                        <div className=\"text-sm text-gray-400\">\n                          {trade.type.toUpperCase()} {trade.quantity} @ ₹{trade.entryPrice.toFixed(2)}\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"text-right\">\n                      {trade.pnl !== undefined && (\n                        <div className={`font-semibold ${trade.pnl >= 0 ? 'text-green-400' : 'text-red-400'}`}>\n                          {trade.pnl >= 0 ? '+' : ''}{formatCurrency(trade.pnl)}\n                        </div>\n                      )}\n                      <div className=\"text-sm text-gray-400\">\n                        {new Date(trade.entryTime).toLocaleTimeString()}\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"commands\" className=\"space-y-4\">\n          <Card className=\"bg-gray-800 border-gray-700\">\n            <CardHeader>\n              <CardTitle>Bot Command Interface</CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div className=\"flex space-x-2\">\n                <Input\n                  placeholder=\"Enter command (e.g., 'create trend bot', 'list bots', 'dispose BOT_001')\"\n                  value={command}\n                  onChange={(e) => setCommand(e.target.value)}\n                  onKeyPress={(e) => e.key === 'Enter' && handleCommand()}\n                  className=\"bg-gray-700 border-gray-600\"\n                />\n                <Button onClick={handleCommand} className=\"bg-blue-600 hover:bg-blue-700\">\n                  Execute\n                </Button>\n              </div>\n              \n              <div className=\"space-y-2 max-h-96 overflow-y-auto\">\n                {commandHistory.map((entry, index) => (\n                  <div key={index} className=\"p-3 bg-gray-700 rounded-lg\">\n                    <div className=\"text-sm text-blue-400 font-mono\">\n                      {'>'} {entry.command}\n                    </div>\n                    <div className=\"text-sm text-gray-300 mt-1 whitespace-pre-line\">\n                      {entry.result}\n                    </div>\n                    <div className=\"text-xs text-gray-500 mt-1\">\n                      {new Date(entry.timestamp).toLocaleTimeString()}\n                    </div>\n                  </div>\n                ))}\n              </div>\n              \n              {commandHistory.length === 0 && (\n                <div className=\"text-center text-gray-500 py-8\">\n                  No commands executed yet. Try typing a command above.\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"analytics\" className=\"space-y-4\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\n            <Card className=\"bg-gray-800 border-gray-700\">\n              <CardHeader>\n                <CardTitle>Strategy Performance</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-3\">\n                  {['trend', 'reversal', 'breakout', 'trap'].map((strategy) => {\n                    const strategyBots = bots.filter(b => b.strategy === strategy);\n                    const totalPnL = strategyBots.reduce((sum, b) => sum + b.performance.totalPnL, 0);\n                    const totalTrades = strategyBots.reduce((sum, b) => sum + b.performance.totalTrades, 0);\n                    \n                    return (\n                      <div key={strategy} className=\"flex items-center justify-between p-3 bg-gray-700 rounded-lg\">\n                        <div>\n                          <div className=\"font-medium capitalize\">{strategy}</div>\n                          <div className=\"text-sm text-gray-400\">{strategyBots.length} bots • {totalTrades} trades</div>\n                        </div>\n                        <div className={`font-semibold ${totalPnL >= 0 ? 'text-green-400' : 'text-red-400'}`}>\n                          {formatCurrency(totalPnL)}\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n              </CardContent>\n            </Card>\n\n            <Card className=\"bg-gray-800 border-gray-700\">\n              <CardHeader>\n                <CardTitle>System Health</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-3\">\n                  <div className=\"flex items-center justify-between\">\n                    <span>Data Feed</span>\n                    <div className=\"flex items-center space-x-2\">\n                      <div className=\"w-2 h-2 bg-green-500 rounded-full\"></div>\n                      <span className=\"text-sm text-green-400\">Connected</span>\n                    </div>\n                  </div>\n                  <div className=\"flex items-center justify-between\">\n                    <span>Broker API</span>\n                    <div className=\"flex items-center space-x-2\">\n                      <div className=\"w-2 h-2 bg-green-500 rounded-full\"></div>\n                      <span className=\"text-sm text-green-400\">Online</span>\n                    </div>\n                  </div>\n                  <div className=\"flex items-center justify-between\">\n                    <span>Evolution Engine</span>\n                    <div className=\"flex items-center space-x-2\">\n                      <div className=\"w-2 h-2 bg-blue-500 rounded-full\"></div>\n                      <span className=\"text-sm text-blue-400\">Scheduled</span>\n                    </div>\n                  </div>\n                  <div className=\"flex items-center justify-between\">\n                    <span>Signal Processing</span>\n                    <div className=\"flex items-center space-x-2\">\n                      <div className=\"w-2 h-2 bg-green-500 rounded-full animate-pulse\"></div>\n                      <span className=\"text-sm text-green-400\">Active</span>\n                    </div>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}